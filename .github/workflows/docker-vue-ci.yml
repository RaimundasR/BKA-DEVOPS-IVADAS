name: Vue.js Docker Build and Deploy

on:
  push:
    branches:
      - "feature/**"  # Build image on push to feature branches
  pull_request:
    types: [opened, reopened, ready_for_review]  # Deploy when PR is opened to main
    branches:
      - main
  workflow_dispatch:  # Allows manual trigger for staging deployment

jobs:
  build:
    runs-on: [bka-devops, self-hosted]  # Use self-hosted runner
    timeout-minutes: 5
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Image
        run: docker build -t my-vue-app .

      - name: Save Docker Image as Tar
        run: docker save my-vue-app -o my-vue-app.tar

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: vue-docker-build
          path: my-vue-app.tar
          retention-days: 1

      - name: Cleanup Docker Cache
        run: docker system prune -af
        if: always()

  deploy-staging:
    runs-on: [bka-devops, self-hosted]
    needs: build
    timeout-minutes: 5
    if: github.event_name == 'workflow_dispatch'  # Manual trigger only
    steps:
      - name: Download Built Docker Image
        uses: actions/download-artifact@v4
        with:
          name: vue-docker-build

      - name: Load Docker Image
        run: docker load -i my-vue-app.tar

      - name: Stop and Remove Old Staging Container and Image
        run: |
          docker stop vue-staging || true
          docker rm vue-staging || true
          docker rmi my-vue-app || true

      - name: Run New Staging Container
        run: docker run -d --name vue-staging -p 8081:80 my-vue-app

      - name: Cleanup Docker Cache
        run: docker system prune -af
        if: always()

  deploy-production:
    runs-on: [bka-devops, self-hosted]
    needs: build
    timeout-minutes: 5
    if: github.event_name == 'pull_request' && github.base_ref == 'main'  # Deploy on PR to main
    steps:
      - name: Download Built Docker Image
        uses: actions/download-artifact@v4
        with:
          name: vue-docker-build

      - name: Load Docker Image
        run: docker load -i my-vue-app.tar

      - name: Stop and Remove Old Production Container and Image
        run: |
          docker stop vue-nginx || true
          docker rm vue-nginx || true
          docker rmi my-vue-app || true

      - name: Run New Production Container
        run: docker run -d --name vue-nginx -p 8080:80 my-vue-app

      - name: Cleanup Docker Cache
        run: docker system prune -af
        if: always()
