name: Vue.js Docker Build and Deploy

on:
  push:
    branches:
      - "feature/**"
      - main
  pull_request:
    branches:
      - main
    types: [opened, reopened, ready_for_review]

jobs:
  build-development:
    runs-on: bka-devops
    timeout-minutes: 5
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Check and Set Docker Tag
        run: |
          VERSION_FILE="/home/tenant/docker_version.txt"
          if [[ -f "$VERSION_FILE" ]]; then
            LAST_VERSION=$(cat "$VERSION_FILE" | sed 's/v//')
            NEXT_VERSION=$((LAST_VERSION + 1))
          else
            NEXT_VERSION=1
          fi
          echo "v$NEXT_VERSION" > "$VERSION_FILE"
          echo "DOCKER_TAG=v$NEXT_VERSION" >> $GITHUB_ENV
          echo "DOCKER_TAG set to v$NEXT_VERSION"

      - name: Build Docker Image (Development Stage)
        run: docker buildx build --load -t my-vue-app:${{ env.DOCKER_TAG }} .

      - name: Save Docker Image as Tar
        run: docker save my-vue-app:${{ env.DOCKER_TAG }} -o my-vue-app-${{ env.DOCKER_TAG }}.tar

      - name: Ensure Docker Tag is Set
        run: |
          if [ -z "${{ env.DOCKER_TAG }}" ]; then
            echo "DOCKER_TAG is not set! Exiting..."
            exit 1
          else
            echo "DOCKER_TAG is set to: ${{ env.DOCKER_TAG }}"
          fi

      - name: Print Artifact Name Before Upload
        run: echo "vue-docker-${{ env.DOCKER_TAG }}"


      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: vue-docker-${{ env.DOCKER_TAG }}
          path: my-vue-app-${{ env.DOCKER_TAG }}.tar
          retention-days: 1

      - name: Cleanup Docker Cache
        run: docker system prune -af
        if: always()
